package com.menadinteractive.folliet2016;

import android.app.Application;
import android.content.Context;
import android.database.sqlite.SQLiteException;
import android.util.Log;

import com.menadinteractive.segafredo.communs.Global;
import com.menadinteractive.segafredo.db.MyDB;
import com.menadinteractive.segafredo.db.TableClient;
import com.menadinteractive.segafredo.db.TableContactcli;
import com.menadinteractive.segafredo.db.TableFermeture;
import com.menadinteractive.segafredo.db.TableHistoInter;
import com.menadinteractive.segafredo.db.TableHistoTodo;
import com.menadinteractive.segafredo.db.TableHoraire;
import com.menadinteractive.segafredo.db.TableListeMateriel;
import com.menadinteractive.segafredo.db.TableListeTarifs;
import com.menadinteractive.segafredo.db.TableListeTarifsDetails;
import com.menadinteractive.segafredo.db.TableLivraison;
import com.menadinteractive.segafredo.db.TableMaterielClient;
import com.menadinteractive.segafredo.db.TableQuestionnaire;
import com.menadinteractive.segafredo.db.TableStock;
import com.menadinteractive.segafredo.db.TableSymptomes;
import com.menadinteractive.segafredo.db.TableTarif;
import com.menadinteractive.segafredo.db.dbCliToVisit;
import com.menadinteractive.segafredo.db.dbHistoFactureEnt;
import com.menadinteractive.segafredo.db.dbKD;
import com.menadinteractive.segafredo.db.dbKD100Visite;
import com.menadinteractive.segafredo.db.dbKD101ClientVu;
import com.menadinteractive.segafredo.db.dbKD102Agenda;
import com.menadinteractive.segafredo.db.dbKD103Questionnaire;
import com.menadinteractive.segafredo.db.dbKD104AgendaSrv;
import com.menadinteractive.segafredo.db.dbKD105AgendaSrvSupp;
import com.menadinteractive.segafredo.db.dbKD451RetourMachineclient;
import com.menadinteractive.segafredo.db.dbKD452ComptageMachineclient;
import com.menadinteractive.segafredo.db.dbKD543LinInventaire;
import com.menadinteractive.segafredo.db.dbKD544LinMvtsStock;
import com.menadinteractive.segafredo.db.dbKD71User;
import com.menadinteractive.segafredo.db.dbKD729HistoDocuments;
import com.menadinteractive.segafredo.db.dbKD730FacturesDues;
import com.menadinteractive.segafredo.db.dbKD731HistoDocumentsLignes;
import com.menadinteractive.segafredo.db.dbKD83EntCde;
import com.menadinteractive.segafredo.db.dbKD84LinCde;
import com.menadinteractive.segafredo.db.dbKD85Tempo;
import com.menadinteractive.segafredo.db.dbKD91EntPlan;
import com.menadinteractive.segafredo.db.dbKD92LinPlan;
import com.menadinteractive.segafredo.db.dbKD93PlanFiller;
import com.menadinteractive.segafredo.db.dbKD94Marchandise;
import com.menadinteractive.segafredo.db.dbKD981RetourBanqueEnt;
import com.menadinteractive.segafredo.db.dbKD982RetourBanqueLin;
import com.menadinteractive.segafredo.db.dbKD98Encaissement;
import com.menadinteractive.segafredo.db.dbKD99EncaisserFacture;
import com.menadinteractive.segafredo.db.dbLog;
import com.menadinteractive.segafredo.db.dbLogWS;
import com.menadinteractive.segafredo.db.dbParam;
import com.menadinteractive.segafredo.db.dbSiteHabitudes;
import com.menadinteractive.segafredo.db.dbSiteListeLogin;
import com.menadinteractive.segafredo.db.dbSiteProduit;
import com.menadinteractive.segafredo.db.dbSociete;
import com.menadinteractive.segafredo.db.dbTournee;
import com.squareup.leakcanary.LeakCanary;

public class app extends Application{

	public MyDB  m_db;
	private static Context context;

	@Override 
	public final void onCreate()
	{
		super.onCreate();

		/*if (LeakCanary.isInAnalyzerProcess(this)) {
			// This process is dedicated to LeakCanary for heap analysis.
			// You should not init your app in this process.
			return;
		}
		LeakCanary.install(this);*/
		// Normal app init code...
		Debug.setDebug(true);
		startDB();
	}

	public void startDB()
	{
		openDB();
		context=getApplicationContext();

		Global.dbKDEntCde = new dbKD83EntCde(m_db);
		Global.dbKDLinCde = new dbKD84LinCde(m_db);
		Global.dbKDTempo = new dbKD85Tempo(m_db);
		Global.dbKDMarchandise = new dbKD94Marchandise(m_db);

		Global.dbKDLinInv = new dbKD543LinInventaire (m_db);
		Global.dbKDLinTransfert = new dbKD544LinMvtsStock (m_db);
		Global.dbProduit = new dbSiteProduit(m_db);
		Global.dbClient = new TableClient(m_db);
		Global.dbCliToVisit = new dbCliToVisit(m_db);
		Global.dbContactcli = new TableContactcli(m_db);
		Global.dbSiteHabitudes = new dbSiteHabitudes(m_db);
		Global.dbTarif = new TableTarif(m_db);
		Global.dbMaterielClient = new TableMaterielClient(m_db);
		Global.dbSymptomes = new TableSymptomes(m_db);
		Global.dbQuestionnaire = new TableQuestionnaire(m_db);
		Global.dbLLogWs = new dbLogWS(m_db);

		Global.dbLivraison = new TableLivraison(m_db);

		Global.dbListeMateriel = new TableListeMateriel(m_db);

		Global.dbListeTarif = new TableListeTarifs(m_db);
		Global.dbListeTarifsDetails = new TableListeTarifsDetails(m_db);
		Global.dbHistoTodo = new TableHistoTodo(m_db);

		Global.dbHoraire = new TableHoraire(m_db);
		Global.dbFermeture = new TableFermeture(m_db);
		Global.dbParam = new dbParam(m_db);
		Global.dbKDIdent = new dbKD71User(m_db);
		Global.dbStock= new TableStock(m_db);
		Global.dbKDVisite = new dbKD100Visite(m_db);
		Global.dbKDClientVu = new dbKD101ClientVu(m_db);
		Global.dbKDRetourMachineClient = new dbKD451RetourMachineclient(m_db);
		Global.dbKDComptageMachineClient = new dbKD452ComptageMachineclient(m_db);
		Global.dbKDAgenda=new dbKD102Agenda(m_db);
		Global.dbKDAgendaSrv=new dbKD104AgendaSrv(m_db);
		Global.dbKDAgendaSrvSupp=new dbKD105AgendaSrvSupp(m_db);
		Global.dbLog=new dbLog(m_db);
		Global.dbSoc=new dbSociete(m_db);
		Global.dbKDEntPlan=new dbKD91EntPlan(m_db);
		Global.dbKDLinPlan=new dbKD92LinPlan(m_db);
		Global.dbKDFillPlan=new dbKD93PlanFiller(m_db);
		Global.dbKDEncaissement=new dbKD98Encaissement(m_db);
		Global.dbKDEncaisserFacture=new dbKD99EncaisserFacture(m_db);
		Global.dbKDHistoDocuments=new dbKD729HistoDocuments(m_db);
		Global.dbKDFacturesDues = new dbKD730FacturesDues(m_db);
		Global.dbKDHistoLigneDocuments=new dbKD731HistoDocumentsLignes(m_db);

		Global.dbKDRetourBanqueEnt = new dbKD981RetourBanqueEnt(m_db);
		Global.dbKDRetourBanqueLin = new dbKD982RetourBanqueLin(m_db);

		Global.dbKDQuestionnaire = new dbKD103Questionnaire(m_db);

		createTables();
		createIndex();

		//MyDB.copyFile(MyDB.source,MyDB.dest);

	}

	public void createTables(){
		StringBuilder err=new StringBuilder();
		m_db.execSQL(dbParam.TABLE_CREATE,err);
		m_db.execSQL(dbSiteProduit.TABLE_CREATE,err);
		m_db.execSQL(dbKD.getTableCreateKD(),err);
		m_db.execSQL(dbKD.getTableCreateKDHisto(),err);
		m_db.execSQL(dbKD.getTableCreateKDDuplicata(),err);
		m_db.execSQL(TableClient.TABLE_CREATE,err);
		m_db.execSQL(TableClient.TABLE_CREATE2,err); // ajout champ tournée pour synchro
		m_db.execSQL(TableClient.TABLE_CREATE3,err); // ajout champ envoi factures mail
		m_db.execSQL(TableContactcli.TABLE_CREATE,err);
		m_db.execSQL(TableMaterielClient.TABLE_CREATE,err);
		m_db.execSQL(TableMaterielClient.TABLE_CREATE2,err); // ajout du champ codecom pour synchro
		m_db.execSQL(TableTarif.TABLE_CREATE,err);
		m_db.execSQL(TableTarif.TABLE_CREATE2,err); // ajout du champ codecom pour synchro
		m_db.execSQL(TableHoraire.TABLE_CREATE,err);
		m_db.execSQL(TableFermeture.TABLE_CREATE,err);
		m_db.execSQL(TableStock.TABLE_CREATE,err);
		m_db.execSQL(dbLog.TABLE_CREATE,err);
		m_db.execSQL(dbHistoFactureEnt.TABLE_CREATE,err);
		m_db.execSQL(dbSiteListeLogin.TABLE_CREATE,err);
		m_db.execSQL(dbTournee.TABLE_CREATE,err);
		m_db.execSQL(TableHistoInter.TABLE_CREATE,err);
		m_db.execSQL(dbCliToVisit.TABLE_CREATE,err);
		m_db.execSQL(dbSiteHabitudes.TABLE_CREATE,err);
		m_db.execSQL(dbSiteHabitudes.TABLE_CREATE2,err);		//tof, ajout du champs tournée sans recreer la table

		m_db.execSQL(TableListeTarifs.TABLE_CREATE,err);
		m_db.execSQL(TableListeTarifsDetails.TABLE_CREATE,err);
		m_db.execSQL(TableLivraison.TABLE_CREATE,err);
		m_db.execSQL(dbLogWS.TABLE_CREATE,err);


		m_db.execSQL(dbLog.ALTER_REQUETE,err);
		
		Debug.Log(err.toString());

		Log.e("err","err"+err.toString());
		Log.e("table create","table create"+TableClient.TABLE_CREATE);
	}
	
	public void createIndex(){
		StringBuilder err = new StringBuilder();
		//Index tarif
		m_db.execSQL(TableTarif.INDEX_CREATE,err);
		
		//Index client
		m_db.execSQL(TableClient.INDEX_CREATE_CODE_CLI,err);
		m_db.execSQL(TableClient.INDEX_CREATE_CODEVRP,err);
		m_db.execSQL(TableClient.INDEX_CREATE_JOUR_PASSAGE,err);
		m_db.execSQL(TableClient.INDEX_CREATE_NOM_CLI,err);
		m_db.execSQL(TableClient.INDEX_CREATE_ZONE,err);
		
		//Index produit
		m_db.execSQL(dbSiteProduit.INDEX1_CREATE,err);
		m_db.execSQL(dbSiteProduit.INDEX2_CREATE,err);
		m_db.execSQL(dbSiteProduit.INDEX_CODFAM_CREATE,err);
		
		//Index param
		m_db.execSQL(dbParam.INDEX_CREATE_CODEREC,err);
		
		//Index tourni
		m_db.execSQL(dbTournee.INDEX_CREATE_CODE_CLI,err);
		m_db.execSQL(dbTournee.INDEX_CREATE_NUM_INTER,err);
		
		//index histoInter
		m_db.execSQL(TableHistoInter.INDEX_CREATE_CODE_CLI,err);
		m_db.execSQL(TableHistoInter.INDEX_CREATE_NUM_INTER,err);

		//index habitude
		m_db.execSQL(dbSiteHabitudes.INDEX_CREATE_CODE_CLI,err);
		m_db.execSQL(dbSiteHabitudes.INDEX_CREATE_CCODE_ART,err);
				
		
		//Index KD kems_data
		/*m_db.execSQL(dbKD.INDEX1_CREATE,err);
		m_db.execSQL(dbKD.INDEX2_CREATE,err);
		m_db.execSQL(dbKD.INDEX3_CREATE,err);
		m_db.execSQL(dbKD.INDEX4_CREATE,err);*/

		//Index KD kems_datahisto
		/*m_db.execSQL(dbKD.INDEX5_CREATE,err);
		m_db.execSQL(dbKD.INDEX6_CREATE,err);
		m_db.execSQL(dbKD.INDEX7_CREATE,err);
		m_db.execSQL(dbKD.INDEX8_CREATE,err);*/
		m_db.execSQL(dbKD.INDEX6_CREATE,err);
		
		m_db.execSQL(dbKD.INDEX5_DROP,err);
		m_db.execSQL(dbKD.INDEX6_DROP,err);
		m_db.execSQL(dbKD.INDEX7_DROP,err);
		m_db.execSQL(dbKD.INDEX8_DROP,err);
		
		
		
		
			
		
		Debug.Log(err.toString());
	}

	boolean openDB()
	{
		m_db=new MyDB(this.getApplicationContext());
		try
		{
			m_db.conn= m_db.getWritableDatabase();
		}
		catch(SQLiteException ex)
		{
			m_db.conn= m_db.getReadableDatabase();
		}
		return true;
	}

	 public static Context getAppContext() {
	        return app.context;
	    }

}
